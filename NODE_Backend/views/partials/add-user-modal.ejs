<div class="modal-wrapper" id="add-user-modal" style="top:70%">
  <div class="modal">
    <a href="#" onclick="closeModal()" class="modal-close">+</a>
    <div class="modal-title">
      <h2>Create New User</h2>
    </div>
    <div class="modal-body">
      <form
        method="post"
        action="/users"
        enctype="multipart/form-data"
        id="add-user-form"
      >
      <input type="text" placeholder="Serial" name="serial" />
      <p class="error serial-error"></p>

      <input type="text" placeholder="enter name in English " name="engname" />
      <p class="error engname-error"></p>

        <input type="text" placeholder="enter name in Bengali" name="name" />
        <p class="error name-error"></p>

        <input type="text" placeholder="enter email" name="email" />
        <p class="error email-error"></p>

        <input type="text" placeholder="enter mobile" name="mobile" />
        <p class="error mobile-error"></p>

        <input type="password" placeholder="enter password" name="password" />
        <p class="error password-error"></p>

        <input type="text" placeholder="Father's name" name="fathersname" />
        <p class="error fathersname-error"></p>

        <input type="text" placeholder="Mother's name" name="mothersname" />
        <p class="error mothersname-error"></p>

        <input type="text" placeholder="Date of Birth" name="dateofbirth" />
        <p class="error dateofbirth-error"></p>

        <input type="text" placeholder="Occupation" name="occupation" />
        <p class="error occupation-error"></p>

        <input type="text" placeholder="Education" name="education" />
        <p class="error education-error"></p>

        <input type="text" placeholder="NID" name="nid" />
        <p class="error nid-error"></p>

        <input type="text" placeholder="Current Address" name="currentaddress" />
        <p class="error currentaddress-error"></p>


        <input type="text" placeholder="Permanent Address" name="permaaddress" />
        <p class="error permaaddress-error"></p>

        <input type="text" placeholder="Nominee" name="nominee" />
        <p class="error nominee-error"></p>

        <input type="text" placeholder="Position" name="position" />
        <p class="error position-error"></p>

        <input type="text" placeholder="Status" name="status" />
        <p class="error status-error"></p>

        <input type="text" placeholder="Comments" name="comments" />
        <p class="error comments-error"></p>

        <input type="file" name="avatar" />
        <p class="error avatar-error"></p>

        
        <p class="error common-error"></p>

        <input type="submit" value="Submit" />
      </form>
    </div>
  </div>
</div>
<script>
  const modal = document.querySelector("#add-user-modal");
  const form = document.querySelector("#add-user-form");

  // success toast
  const successToast = Toastify({
    text: "User was added successfully! Reloading the list...",
    duration: 1000,
  });

  function closeModal() {
    modal.style.display = "none";
  }
  function openModal() {
    modal.style.display = "block";
  }

  // form submit handler
  form.onsubmit = async function (event) {
    event.preventDefault();

    // clear errors first
    const errorPlaceholders = document.querySelectorAll("p.error");
    for (let i = 0; i < errorPlaceholders.length; i++) {
      errorPlaceholders[i].style.display = "none";
    }

    const inputErrors = document.querySelectorAll("input.error");
    if (inputErrors.length > 0) {
      for (let j = 0; j < inputErrors.length; j++) {
        inputErrors[j].classList.remove("error");
      }
    }

 

    // prepare the form data
    const formData = new FormData(form);

    // send the request to server
    let response = await fetch("/users", {
      method: "POST",
      body: formData,
    });

    // get response
    let result = await response.json();
 
    // handle error and response
    if (result.errors) {

      
      // errors
      Object.keys(result.errors).forEach((fieldName) => {
      

        // add error class to all inputs
        form[fieldName].classList.add("error");

  

        // set all error placeholders (p tag) textContent
        const errorPlaceholder = document.querySelector(`.${fieldName}-error`);
       
        errorPlaceholder.textContent = result.errors[fieldName].msg;

        // make all placeholders visible
       errorPlaceholder.style.display = "block";
      });
    } else {
      // success
      successToast.showToast();
      closeModal();
      document.querySelector("p.error").style.display = "none";

      // reload the page after 1 second
      setTimeout(() => {
       // location.reload();
      }, 1000);
    }
  };
</script>
